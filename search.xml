<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大数据平台搭建(容器环境)</title>
      <link href="/2024/11/26/docker/"/>
      <url>/2024/11/26/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据平台搭建-容器环境"><a href="#大数据平台搭建-容器环境" class="headerlink" title="大数据平台搭建(容器环境)"></a>大数据平台搭建(容器环境)</h1><h2 id="1-hadoop-完全分布式"><a href="#1-hadoop-完全分布式" class="headerlink" title="1. hadoop 完全分布式"></a>1. hadoop 完全分布式</h2><h3 id="把-jdk-文件从-software-解压到-module-目录"><a href="#把-jdk-文件从-software-解压到-module-目录" class="headerlink" title="把 jdk 文件从 software 解压到 module 目录"></a>把 jdk 文件从 software 解压到 module 目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u212-linux-x64.tar.gz -C ../module/</span><br></pre></td></tr></table></figure><h3 id="配置-Java-环境并使其生效"><a href="#配置-Java-环境并使其生效" class="headerlink" title="配置 Java 环境并使其生效"></a>配置 Java 环境并使其生效</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /erc/profile</span><br><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_212</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/sbin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="退出刷新环境变量文件-没事修改环境文件都得刷新"><a href="#退出刷新环境变量文件-没事修改环境文件都得刷新" class="headerlink" title="退出刷新环境变量文件(没事修改环境文件都得刷新)"></a>退出刷新环境变量文件(没事修改环境文件都得刷新)</h3><p>source &#x2F;etc&#x2F;profile</p><h3 id="验证-JAVA-环境"><a href="#验证-JAVA-环境" class="headerlink" title="验证 JAVA 环境"></a>验证 JAVA 环境</h3><p>java -version</p><h3 id="配置免密登录-进入-hosts-文件配置上另外两个节点的-ip，三个节点但都需要配"><a href="#配置免密登录-进入-hosts-文件配置上另外两个节点的-ip，三个节点但都需要配" class="headerlink" title="配置免密登录(进入 hosts 文件配置上另外两个节点的 ip，三个节点但都需要配)"></a>配置免密登录(进入 hosts 文件配置上另外两个节点的 ip，三个节点但都需要配)</h3><p>vi &#x2F;etc&#x2F;hosts</p><table><thead><tr><th align="center">ip</th><th align="center">hostname</th></tr></thead><tbody><tr><td align="center">172.17.0.2</td><td align="center">bigdata01</td></tr><tr><td align="center">172.17.0.3</td><td align="center">bigdata02</td></tr><tr><td align="center">172.17.0.4</td><td align="center">bigdata03</td></tr></tbody></table><h3 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h3><p>passwd root</p><h3 id="生成公钥和私钥-全部-Enter"><a href="#生成公钥和私钥-全部-Enter" class="headerlink" title="生成公钥和私钥(全部 Enter)"></a>生成公钥和私钥(全部 Enter)</h3><p>ssh-keygen</p><h3 id="把公钥传给另外两个节点-需输入节点密码"><a href="#把公钥传给另外两个节点-需输入节点密码" class="headerlink" title="把公钥传给另外两个节点(需输入节点密码)"></a>把公钥传给另外两个节点(需输入节点密码)</h3><p>ssh-copy-id 节点名称</p><h3 id="查看-ssh-服务是否成功"><a href="#查看-ssh-服务是否成功" class="headerlink" title="查看 ssh 服务是否成功"></a>查看 ssh 服务是否成功</h3><p>ssh localhost</p><h3 id="把产生的公钥放置到-authorized-keys-文件中"><a href="#把产生的公钥放置到-authorized-keys-文件中" class="headerlink" title="把产生的公钥放置到 authorized_keys 文件中"></a>把产生的公钥放置到 authorized_keys 文件中</h3><p>cat ~&#x2F;.ssh&#x2F;id_rsa.pub &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys<br>chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys</p><h3 id="把配置好的-jdk-文件和环境变量文件传给另外两个节点"><a href="#把配置好的-jdk-文件和环境变量文件传给另外两个节点" class="headerlink" title="把配置好的 jdk 文件和环境变量文件传给另外两个节点"></a>把配置好的 jdk 文件和环境变量文件传给另外两个节点</h3><p>scp -r 文件路径 节点名称:文件路径</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>将 hadoop 与 flume 中 guava-27.0-jre.jar 包版本保持一致( 因为 hadoop 中此包版本是 27 而 flume 中版本是 11 )<br>rm -rf &#x2F;opt&#x2F;module&#x2F;flume-1.9.0&#x2F;lib&#x2F;guava-11.0.2.jar<br>然后将 hadoop 里面的此包复制给 flume<br>cp &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;guava-27.0-jre.jar &#x2F;opt&#x2F;module&#x2F;flume-1.9.0&#x2F;lib&#x2F;</p><p>修改 flume-env.sh 配置文件内容<br>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_212</p><p>创建 flume-conf.properties 配置文件内容<br>a1.sources&#x3D;r1<br>a1.sinks&#x3D;k1<br>a1.channels&#x3D;c1</p><p>a1.sources.r1.type&#x3D;exec<br>a1.sources.r1.command&#x3D;tail &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;logs&#x2F;hadoop-root-namenode-bigdata01.log</p><p>a1.sinks.k1.type&#x3D;hdfs<br>a1.sinks.k1.hdfs.path&#x3D;hdfs:&#x2F;&#x2F;bigdata01:9000&#x2F;tmp&#x2F;flume&#x2F;%Y%m%d<br>a1.sinks.k1.hdfs.filePrefix&#x3D;log-<br>a1.sinks.k1.hdfs.fileType&#x3D;DataStream<br>a1.sinks.k1.hdfs.useLocalTimeStamp&#x3D;true</p><p>a1.channels.c1.type&#x3D;memory<br>a1.sources.r1.channels&#x3D;c1<br>a1.sinks.k1.channel&#x3D;c1</p><p>将 Hadoop 的包复制到 flume 的 lib 目录下<br>&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;hadoop-common-3.1.3.jar<br>&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;下的 hadoop-auth-3.1.3.jar 和 commons-configuration2-2.1.1.jar<br>将&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;etc&#x2F;hadoop 下的 core-site.xml 和 hdfs-site.xm 文件复制到 conf 目录里<br>启动全部进程<br>start-all<br>在后台启动 flume<br>nohup flume-ng agent –conf conf&#x2F; –conf-file &#x2F;opt&#x2F;module&#x2F;flume-1.9.0&#x2F;conf&#x2F;flume-conf.properties –name a1 -Dflume.root.logger&#x3D;DEBUG,console &amp;</p><p>查看生成的文件<br>hdfs dfs -ls &#x2F;tmp&#x2F;flume<br>hdfs dfs -ls &#x2F;tmp&#x2F;flume&#x2F;20240108</p><p>flink on yarn<br>解压 flink 文件到 module<br>tar -zxvf &#x2F;opt&#x2F;software&#x2F;flink-1.14.0-bin-scala_2.12.tgz -C &#x2F;opt&#x2F;module&#x2F;<br>配置环境变量<br>vi &#x2F;etc&#x2F;profile<br>export FLINK_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;flink-1.14.0<br>export PATH&#x3D;$FLINK_HOME&#x2F;bin:$FINK_HOME&#x2F;sbin:$PATH<br>export HADOOP_CLASSPATH&#x3D;<code>hadoop classpath</code><br>export HADOOP_CONF_DIR&#x3D;&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;etc&#x2F;hadoop</p><p>验证环境变量正确性<br>source &#x2F;etc&#x2F;profile<br>flink –version<br>配置相关文件<br>修改 conf 目录下的 flink-conf.yaml 文件<br>classloader.check-leaked-classloader:空格 false<br>启动 flink 集群<br>.&#x2F; flink-console.sh<br>使用 jps 查看进程</p><p>在 bin 目录下提交 flink<br>flink run -m yarn-cluster -p 2 -yjm 2G -ytm 2G $FLINK_HOME&#x2F;examples&#x2F;batch&#x2F;WordCount.jar</p><p>Hive<br>复制 hive-env.sh.template 和 hive-default.xml.template 并改名<br>cp hive-env.sh.template hive-env.sh<br>cp hive-default.xml.template hive-site.xml</p><p>配置 hive-env.sh.template 和 hive-default.xml.template 文件</p><p>env<br>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk<br>export HADOOP_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;hadoop<br>export HIVE_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;hive<br>export HIVE_CONF_DIR&#x3D;$HIVE_HOME&#x2F;conf</p><p>site(修改配置)<br><property><br><name>javax.jdo.option.ConnectionURL</name><br><value>jdbc:mysql:&#x2F;&#x2F;你的虚拟机 IP:3306&#x2F;hivedb?createDatabaseIfNotExist&#x3D;true&amp;useSSL&#x3D;false</value><br><description> localhost 虚拟机 IP 地址，hivedb 数据库的名字（随意）createDatabaseIfNotExist 如果数据库不存在自动创建</description><br></property></p><!--配置数据库驱动--><property>    <name>javax.jdo.option.ConnectionDriverName</name>    <value>com.mysql.jdbc.Driver</value></property><!--配置数据库用户名--><property>    <name>javax.jdo.option.ConnectionUserName</name>    <value>你的用户（一般为root）</value></property><!--配置MySQL数据库root的密码--><property>    <name>javax.jdo.option.ConnectionPassword</name>    <value>你的密码</value></property><p>把 Hadoop 的 guava 文件复制到 hive 下的 lib 目录(再把 hive 的低版本 guava 包删除)<br>cp &#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;guava-27.0-jre.jar &#x2F;opt&#x2F;module&#x2F;hive-3.1.2&#x2F;lib<br>rm -rf rm -rf guava-19.0-jre.jar</p><p>Spark<br>vi spark-env.sh<br>export JAVA_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_212<br>export SPARK_BIGDATA01_IP&#x3D;bigdata01<br>export SPARK_BIGDATA01_HOST&#x3D;bigdata01<br>export SPARK_BIGDATA01_PORT&#x3D;7077<br>export HADOOP_HOME&#x3D;&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3<br>export YARN_CONF_DIR&#x3D;${HADOOP_HOME}&#x2F;etc&#x2F;hadoop<br>export HADOOP_CONF_DIR&#x3D;${HADOOP_HOME}&#x2F;etc&#x2F;hadoop</p><p>Hbase<br>site<br>进入&#x2F;opt&#x2F;module&#x2F;hbase-2.2.3&#x2F;conf 下编辑 hbase-site.xml 文件<br><configuration><br><property><br><name>hbase.zookeeper.quorum</name> <value>master,slave1,slave2</value><br></property><br><property><br><name>hbase.rootdir</name><br><value>hdfs:&#x2F;&#x2F;master:9000&#x2F;hbase</value><br></property><br><property><br><name>hbase.cluster.distributed</name><br><value>true</value> </property><br><property><br><name>hbase.master.info.port</name><br><value>60010</value><br></property><br><property><br><name>hbase.unsafe.stream.capability.enforce</name><br><value>false</value><br></property><br></configuration><br>env<br>JAVA_HOME</p><p>kafka<br>修改 Kafka 里的 conf 目录里的 server.properties 文件(找到并修改)<br>log.dirs&#x3D;&#x2F;opt&#x2F;module&#x2F;kafka_2.12-2.4.1&#x2F;logs<br>zookeeper.connect&#x3D;bigdata01:2181, bigdata02:2181, bigdata03:2181<br>kafka-server-start.sh –version<br>在&#x2F;opt&#x2F;module&#x2F;kafka_2.12-2.4.1&#x2F;conf 下启动 Kafka(在三个节点都需要)<br>kafka-server-start.sh -daemon server.properties<br>创建 Topic 并命名为 installtopic，分区数为 2，副本数为 2</p><p>clickhouse<br>启动 clickhouse<br>systemctl start clickhouse-server<br>查看运行状态<br>systemctl status clickhouse-server</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/2024/11/26/java/"/>
      <url>/2024/11/26/java/</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="结构图（doc文件和txt文件在untitled文件里）"><a href="#结构图（doc文件和txt文件在untitled文件里）" class="headerlink" title="结构图（doc文件和txt文件在untitled文件里）"></a>结构图（doc文件和txt文件在untitled文件里）</h2><!-- ![结构图]("../../themes/butterfly/source/img/Java结构图.png") --><p><img src="/images/Java_jgt.png" alt="结构图"></p><h2 id="BuffersdTest"><a href="#BuffersdTest" class="headerlink" title="BuffersdTest"></a>BuffersdTest</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">public class BuffersdTest &#123;</span><br><span class="line">    static File file1,file2;</span><br><span class="line">    static FileInputStream finStream;</span><br><span class="line">    static FileOutputStream foutStream;</span><br><span class="line">    static InputStreamReader inStreamReader;</span><br><span class="line">    static OutputStreamWriter outStreamWriter;</span><br><span class="line">    static BufferedReader br;</span><br><span class="line">    static BufferedWriter wr;</span><br><span class="line">    public static void main(String[]args) &#123;</span><br><span class="line">        System.out.println(&quot;.\\shao&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            // file1指定到需要读的文件路径</span><br><span class="line">            file1 = new File(&quot;.\\少年闰土.doc&quot;);</span><br><span class="line">            file2 = new File(&quot;.\\少年闰土.txt&quot;);</span><br><span class="line">            finStream = new FileInputStream(file1);</span><br><span class="line">            foutStream = new FileOutputStream(file2);</span><br><span class="line">            br = new BufferedReader(new InputStreamReader(finStream,&quot;UTF-8&quot;));</span><br><span class="line">            wr = new BufferedWriter(new OutputStreamWriter(foutStream));</span><br><span class="line">            String str = null;</span><br><span class="line">            System.out.println(&quot;读写开始....&quot;);</span><br><span class="line">            while ((str = br.readLine()) != null) &#123;</span><br><span class="line">                System.out.println(str);</span><br><span class="line">                str = str + &quot;\r\n&quot;;</span><br><span class="line">                wr.write(str, 0, str.length());</span><br><span class="line">                wr.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        catch (FileNotFoundException e) &#123;e.printStackTrace();&#125;</span><br><span class="line">        catch (IOException e) &#123;e.printStackTrace();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="EmpDemo-java"><a href="#EmpDemo-java" class="headerlink" title="EmpDemo.java"></a>EmpDemo.java</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">abstract class Employee</span><br><span class="line">&#123;</span><br><span class="line">    int salary;</span><br><span class="line">    void setSalary(int salary)</span><br><span class="line">    &#123;</span><br><span class="line">        this.salary=salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    abstract void showSalary();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Saler extends Employee&#123;</span><br><span class="line">    void showSalary()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(&quot;销售员的月薪为￥&quot;+salary*8*30);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Manager extends Employee&#123;</span><br><span class="line">    void showSalary()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(&quot;经理的月薪为：￥&quot;+salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class EmpDemo &#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        Employee emp;</span><br><span class="line">        emp=new Saler();</span><br><span class="line">        emp.setSalary(15);</span><br><span class="line">        emp.showSalary();</span><br><span class="line">        emp=new Manager();</span><br><span class="line">        emp.setSalary(5000);</span><br><span class="line">        emp.showSalary();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileDemo"><a href="#FileDemo" class="headerlink" title="FileDemo"></a>FileDemo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class FileIOTest &#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        FileReader fr=null;</span><br><span class="line">        FileWriter fw=null;</span><br><span class="line">        try &#123;</span><br><span class="line">            &lt;!-- 改为自己的路径 --&gt;</span><br><span class="line">            fr=new FileReader(&quot;.\\少年闰土.doc&quot;);</span><br><span class="line">            fw=new FileWriter(&quot;.\\少年闰土1.txt&quot;);</span><br><span class="line">            char c[]=new char[260];</span><br><span class="line">            while (fr.read(c)!=-1)&#123;</span><br><span class="line">                String str=new String(c);</span><br><span class="line">                System.out.println(&quot;正在写入：&quot;+str);</span><br><span class="line">                fw.write(c);</span><br><span class="line">            &#125;</span><br><span class="line">            fr.close();</span><br><span class="line">            fw.close();</span><br><span class="line">        &#125;</span><br><span class="line">        catch (FileNotFoundException e)&#123;e.printStackTrace();&#125;</span><br><span class="line">        catch (IOException e)&#123;e.printStackTrace();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="InnerClassDemo"><a href="#InnerClassDemo" class="headerlink" title="InnerClassDemo"></a>InnerClassDemo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class OuterClass&#123;</span><br><span class="line">    String str;</span><br><span class="line">    boolean outerClassAccessible;</span><br><span class="line">    InnerClass in;</span><br><span class="line">    public OuterClass()&#123;</span><br><span class="line">        str=new String(&quot;OuterClass variable&quot;);</span><br><span class="line">        outerClassAccessible=true;</span><br><span class="line">        InnerClass in = new InnerClass();</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        System.out.println(&quot;外部类&gt;访问外部类成员:&quot;+outerClassAccessible);</span><br><span class="line">        System.out.println(&quot;外部类&gt;访问内部类成员:&quot;+in.innerClassAccessible);</span><br><span class="line">    &#125;</span><br><span class="line">    class InnerClass&#123;</span><br><span class="line">        String str;</span><br><span class="line">        boolean innerClassAccessible;</span><br><span class="line">        public InnerClass()&#123;</span><br><span class="line">            str=new String(&quot;InnerClass variable&quot;);</span><br><span class="line">            innerClassAccessible=true;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">            System.out.println(&quot;内部类&gt;访问外部类成员:&quot;+outerClassAccessible);</span><br><span class="line">            System.out.println(&quot;内部类&gt;访问内部类成员:&quot;+innerClassAccessible);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class InnerClassDemo&#123;</span><br><span class="line">    public static void main(String args[])&#123;</span><br><span class="line">        OuterClass out=new OuterClass();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="StudentInfo-需要与TestArrayList一起使用"><a href="#StudentInfo-需要与TestArrayList一起使用" class="headerlink" title="StudentInfo(需要与TestArrayList一起使用)"></a>StudentInfo(需要与TestArrayList一起使用)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class StudentInfo &#123;</span><br><span class="line">    int id;</span><br><span class="line">    String name;</span><br><span class="line">    String tel;</span><br><span class="line">    public StudentInfo(int id,String name,String tel)&#123;</span><br><span class="line">        this.id = id;</span><br><span class="line">        this.name=name;</span><br><span class="line">        this.tel=tel;</span><br><span class="line">    &#125;</span><br><span class="line">    public int getId()&#123;</span><br><span class="line">        return id;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setId(int id)&#123;</span><br><span class="line">        this.id=id;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getName()&#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setName(String name)&#123;</span><br><span class="line">        this.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getTel()&#123;</span><br><span class="line">        return tel;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setTel(String tel)&#123;</span><br><span class="line">        this.tel=tel;</span><br><span class="line">    &#125;</span><br><span class="line">    public String toString()&#123;</span><br><span class="line">        return name+&quot;的联系电话是:&quot;+tel;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TestArrayList"><a href="#TestArrayList" class="headerlink" title="TestArrayList"></a>TestArrayList</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class TestArrayList02 &#123;</span><br><span class="line">    public static void printInfo(List arrList)&#123;</span><br><span class="line">        for(int i=0;i&lt;arrList.size();i++)&#123;</span><br><span class="line">            StudentInfo stu = (StudentInfo) arrList.get(i);</span><br><span class="line">            System.out.println(&quot;学号:&quot;+stu.getId()+&quot;;姓名:&quot;+stu.getName()+&quot;;电话号码:&quot;+stu.getTel());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        StudentInfo stu01 = new StudentInfo(1,&quot;张华&quot;,&quot;1111111&quot;);</span><br><span class="line">        StudentInfo stu02 = new StudentInfo(2,&quot;李平&quot;,&quot;2222222&quot;);</span><br><span class="line">        StudentInfo stu03 = new StudentInfo(3,&quot;王杰&quot;,&quot;3333333&quot;);</span><br><span class="line">        List stuList = new ArrayList();</span><br><span class="line">        stuList.add(stu01);</span><br><span class="line">        stuList.add(stu02);</span><br><span class="line">        stuList.add(stu03);</span><br><span class="line">        StudentInfo stu04 = new StudentInfo(4,&quot;陈波&quot;,&quot;4444444&quot;);</span><br><span class="line">        stuList.add(2,stu04);</span><br><span class="line">        printInfo(stuList);</span><br><span class="line">        if(stuList.contains(stu04))&#123;</span><br><span class="line">            System.out.println(&quot;有陈波同学&quot;);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            System.out.println(&quot;没有陈波同学&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        //stuList.remove(1);//</span><br><span class="line">        System.out.println(&quot;目前学生总数为:&quot;+stuList.size()+&quot;人&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Talk-跟TalkServer搭配使用，需先运行TalkServer在运行Talk文件"><a href="#Talk-跟TalkServer搭配使用，需先运行TalkServer在运行Talk文件" class="headerlink" title="Talk(跟TalkServer搭配使用，需先运行TalkServer在运行Talk文件)"></a>Talk(跟TalkServer搭配使用，需先运行TalkServer在运行Talk文件)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.*;</span><br><span class="line">import java.util.logging.*;</span><br><span class="line"></span><br><span class="line">public class Talk &#123;</span><br><span class="line">    // 创建日志记录器</span><br><span class="line">    private static final Logger logger = Logger.getLogger(Talk.class.getName());</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            // 建立与服务器的连接</span><br><span class="line">            Socket clientSocket = new Socket(&quot;127.0.0.1&quot;, 2000); // 连接到本地服务器的 2000 端口</span><br><span class="line"></span><br><span class="line">            // 建立接收服务器端信息的输入流对象 br</span><br><span class="line">            BufferedReader br = new BufferedReader(new InputStreamReader(clientSocket.getInputStream(), &quot;UTF-8&quot;));</span><br><span class="line"></span><br><span class="line">            // 建立向服务器端写出信息的输出流对象 pw</span><br><span class="line">            PrintWriter pw = new PrintWriter(new OutputStreamWriter(clientSocket.getOutputStream(), &quot;UTF-8&quot;));</span><br><span class="line"></span><br><span class="line">            // 建立接收本地客户端控制台输入的输入流对象 client_br</span><br><span class="line">            BufferedReader client_br = new BufferedReader(new InputStreamReader(System.in, &quot;UTF-8&quot;));</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;聊天客户端已经启动...&quot;);</span><br><span class="line"></span><br><span class="line">            String client_info = client_br.readLine(); // 从客户端控制台读取信息</span><br><span class="line">            System.out.println(&quot;您输出的信息是: &quot; + client_info);</span><br><span class="line"></span><br><span class="line">            // 进行聊天，直到输入 &quot;bye&quot; 为止</span><br><span class="line">            while (!client_info.equals(&quot;bye&quot;)) &#123;</span><br><span class="line">                // 将客户端输入的信息传给服务器端</span><br><span class="line">                pw.println(client_info);</span><br><span class="line">                pw.flush(); // 刷新输出流</span><br><span class="line"></span><br><span class="line">                // 输出来自服务器的信息</span><br><span class="line">                System.out.println(&quot;来自服务器的信息是: &quot; + br.readLine());</span><br><span class="line"></span><br><span class="line">                // 继续接收客户端控制台的输入</span><br><span class="line">                client_info = client_br.readLine();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 关闭资源</span><br><span class="line">            br.close();</span><br><span class="line">            pw.close();</span><br><span class="line">            clientSocket.close();</span><br><span class="line">        &#125; catch (Exception ex) &#123;</span><br><span class="line">            // 使用日志记录详细的错误信息</span><br><span class="line">            logger.log(Level.SEVERE, &quot;发生错误：&quot;, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TalkServer"><a href="#TalkServer" class="headerlink" title="TalkServer"></a>TalkServer</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.*;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line">import java.util.logging.*;</span><br><span class="line"></span><br><span class="line">public class TalkServer &#123;</span><br><span class="line">    private static final Logger logger = Logger.getLogger(TalkServer.class.getName());</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ServerSocket serverSocket = null;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // 创建服务器端 ServerSocket 对象，监听端口 2000</span><br><span class="line">            serverSocket = new ServerSocket(2000);</span><br><span class="line">            logger.info(&quot;服务器已启动，等待客户端连接...&quot;);</span><br><span class="line"></span><br><span class="line">            // 不断监听客户端连接</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                Socket clientSocket = serverSocket.accept(); // 接受客户端连接</span><br><span class="line">                logger.info(&quot;有新客户端连接： &quot; + clientSocket.getInetAddress().getHostAddress());</span><br><span class="line"></span><br><span class="line">                // 为每个客户端连接创建一个新的线程来处理通信</span><br><span class="line">                new Thread(new ClientHandler(clientSocket)).start();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException ex) &#123;</span><br><span class="line">            logger.log(Level.SEVERE, &quot;服务器发生错误：&quot;, ex);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                if (serverSocket != null) &#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException ex) &#123;</span><br><span class="line">                logger.log(Level.WARNING, &quot;关闭服务器套接字时发生错误：&quot;, ex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 定义客户端处理器线程</span><br><span class="line">    static class ClientHandler implements Runnable &#123;</span><br><span class="line">        private Socket clientSocket;</span><br><span class="line">        private BufferedReader br;</span><br><span class="line">        private PrintWriter pw;</span><br><span class="line">        private BufferedReader server_br;</span><br><span class="line"></span><br><span class="line">        public ClientHandler(Socket clientSocket) &#123;</span><br><span class="line">            this.clientSocket = clientSocket;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public void run() &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                // 获取客户端输入流和输出流</span><br><span class="line">                br = new BufferedReader(new InputStreamReader(clientSocket.getInputStream(), StandardCharsets.UTF_8));</span><br><span class="line">                pw = new PrintWriter(new OutputStreamWriter(clientSocket.getOutputStream(), StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">                // 获取服务器控制台的输入流</span><br><span class="line">                server_br = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">                String clientInfo;</span><br><span class="line">                String serverInfo;</span><br><span class="line"></span><br><span class="line">                // 不断接收客户端信息并处理</span><br><span class="line">                while (true) &#123;</span><br><span class="line">                    // 获取客户端发来的信息</span><br><span class="line">                    clientInfo = br.readLine();</span><br><span class="line">                    if (clientInfo == null || clientInfo.equals(&quot;bye&quot;)) &#123;</span><br><span class="line">                        break; // 如果客户端发送 &quot;bye&quot;，则关闭连接</span><br><span class="line">                    &#125;</span><br><span class="line">                    logger.info(&quot;来自客户端的信息: &quot; + clientInfo);</span><br><span class="line"></span><br><span class="line">                    // 从服务器控制台读取信息并发送给客户端</span><br><span class="line">                    serverInfo = server_br.readLine();</span><br><span class="line">                    pw.println(serverInfo);</span><br><span class="line">                    pw.flush(); // 刷新输出流</span><br><span class="line"></span><br><span class="line">                    // 将服务器响应发送给客户端</span><br><span class="line">                    System.out.println(&quot;服务器回复: &quot; + serverInfo);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; catch (IOException ex) &#123;</span><br><span class="line">                logger.log(Level.SEVERE, &quot;客户端通信处理发生错误：&quot;, ex);</span><br><span class="line">            &#125; finally &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    // 关闭资源</span><br><span class="line">                    if (br != null) br.close();</span><br><span class="line">                    if (pw != null) pw.close();</span><br><span class="line">                    if (clientSocket != null) clientSocket.close();</span><br><span class="line">                &#125; catch (IOException ex) &#123;</span><br><span class="line">                    logger.log(Level.WARNING, &quot;关闭资源时发生错误：&quot;, ex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="UserDefExceptionDemo"><a href="#UserDefExceptionDemo" class="headerlink" title="UserDefExceptionDemo"></a>UserDefExceptionDemo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class MyArrayException extends NegativeArraySizeException&#123;</span><br><span class="line">    public MyArrayException(String message)&#123;</span><br><span class="line">        super(message);</span><br><span class="line">    &#125;</span><br><span class="line">    public String getInfo()&#123;</span><br><span class="line">        String info=&quot;如看到此信息,请重新创建数组!&quot;;</span><br><span class="line">        return info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class UserDefExceptionDemo&#123;</span><br><span class="line">    static int size;</span><br><span class="line">    static int a[];</span><br><span class="line">    static void checkArraySize() throws MyArrayException&#123;</span><br><span class="line">        if(size&gt;0)&#123;</span><br><span class="line">            a=new int[size];</span><br><span class="line">            System.out.println(&quot;数组创建成功!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">            throw new MyArrayException(&quot;数组创建错误，请检查下标！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        if (args.length == 0) &#123;</span><br><span class="line">            System.out.println(&quot;请提供数组大小作为命令行参数！&quot;);</span><br><span class="line">            return; // 如果没有传递参数，直接结束程序</span><br><span class="line">        &#125;</span><br><span class="line">        size=Integer.parseInt(args[0]);</span><br><span class="line">        try&#123;</span><br><span class="line">            checkArraySize();</span><br><span class="line">        &#125;</span><br><span class="line">        catch (MyArrayException e)&#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">            System.out.println(e.getInfo());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人介绍</title>
      <link href="/2024/11/24/zzj/"/>
      <url>/2024/11/24/zzj/</url>
      
        <content type="html"><![CDATA[<h3 id="赵志杰"><a href="#赵志杰" class="headerlink" title="赵志杰"></a>赵志杰</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/24/hello-world/"/>
      <url>/2024/11/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
